syntax = "proto3";

package thebaasco.tenant.onboarding.v1;
option go_package = "proto/tenant/onboarding/v1";
import "validate/validate.proto";
import "google/protobuf/timestamp.proto";
import "google/type/date.proto";
import "types/options.proto";

//Address is a message for providing a given Address for a customer.
message Address {
  //The type of Address being represented. Must be either 'HOME' or 'WORK' (required).
  //This field is validated based on the message this Address is used in.
  //See OnboardingApplication and Employment for required values.
  string type = 1 [(validate.rules).string.min_len = 1];
  //The organization name associated with this Address. It is optional and
  //has a maximum of 300 characters.
  string organization = 2 [(validate.rules).string = {ignore_empty: true, max_len: 300}];
  //The first line of the Address.  This value is required and has
  //a maximum of 300 characters.
  string line_1 = 3 [(validate.rules).string = {min_len : 1, max_len: 300}];
  //The second line of the Address. This value is optional, and has
  //a maximum of 300 characters.
  string line_2 = 4 [(validate.rules).string = {ignore_empty: true, max_len: 300}];
  //The third line of the Address. This value is optional, and has
  //a maximum of 300 characters.
  string line_3 = 5 [(validate.rules).string = {ignore_empty: true, max_len: 300}];
  //The fourth line of the Address. This value is optional, and has
  //a maximum of 300 characters.
  string line_4 = 6 [(validate.rules).string = {ignore_empty: true, max_len: 300}];
  //The fifth line of the Address. This value is optional, and has
  //a maximum of 300 characters.
  string line_5 = 7 [(validate.rules).string = {ignore_empty: true, max_len: 300}];
  //The sixth line of the Address. This value is optional, and has
  //a maximum of 300 characters.
  string line_6 = 8 [(validate.rules).string = {ignore_empty: true, max_len: 300}];
  //The seventh line of the Address. This value is optional, and has
  //a maximum of 300 characters.
  string line_7 = 9 [(validate.rules).string = {ignore_empty: true, max_len: 300}];
  //The eighth line of the Address. This value is optional, and has
  //a maximum of 300 characters.
  string line_8 = 10 [(validate.rules).string = {ignore_empty: true, max_len: 300}];
  //The local sub administrative area such as the municipality or community name.
  //In Canadian and US addresses, this corresponds to the city or town name.
  //This value is optional and has a maximum of 150 characters. e.g. Toronto, Orlando.
  string locality = 11 [(validate.rules).string = {ignore_empty: true, max_len: 150}];
  //The municipality or community name of the major postal region address.
  //For Canadian and US addresses, this can remain empty.
  //This value is optional and has a maximum of 150 characters.
  string dependent_locality = 12 [(validate.rules).string = {ignore_empty: true,max_len: 150}];
  //The municipality or community name of the local postal region address.
  //For Canadian and US addresses, this can remain empty.
  //This value is optional and has a maximum of 150 characters.
  string double_dependent_locality = 13 [(validate.rules).string = {ignore_empty: true,max_len: 150}];
  //The name of the first level administrative area. This value is optional
  //and has a maximum of 150 characters.
  //e.g. For US this would be 'State' and Canada this would be 'Province'
  string administrative_area = 14 [(validate.rules).string = {ignore_empty: true,max_len: 150}];
  //The name of the second level administrative area. This value is optional
  //and has a maximum of 150 characters.
  //e.g. For a city use 'City', county use 'County', etc.
  string sub_administrative_area = 15 [(validate.rules).string = {ignore_empty: true,max_len: 150}];
  //The name of country first level administrative subdivision area
  //in the address. For Canada, this is name of the province and for
  //the US this is the name of the State. This field is required and has
  //a maximum of 150 characters. e.g. 'Ontario' or 'New York'.
  string area = 16 [(validate.rules).string = {min_len: 1, max_len: 150}];
  //The local postal code for routing mail to the address and should
  //contain the ZIP code for US addresses.
  //This field is required and has a maximum of 150 characters.
  string postal_code = 17 [(validate.rules).string = {min_len: 1, max_len: 150}];
  //The name of the country for the Address.  This value is required and
  //has a maximum of 50 characters.
  string country = 18 [(validate.rules).string = {min_len: 1, max_len: 50}];
}

//Employment defines the details of Employment for the customer being onboarded.
message Employment {
  //The status of Employment for this entry.
  //The value stored here is one of the code values retrieved from the
  //ReferenceDataService with data_type set to 'EMPLOYMENT_STATUS'.
  //e.g. EMPLOYMENT_STATUS_EMPLOYED or EMPLOYMENT_STATUS_RETIRED.
  string employment_status = 1 [(validate.rules).string.min_len = 1];
  //The full employer name. The value is required and has a maximum of 50 characters.
  string employer_name = 2 [(validate.rules).string = {ignore_empty: true, max_len: 50}];
  //The industry code the Employment is in. This value is required and has
  //a maximum of 50 characters.
  //The value stored here is one of the code values retrieved from the
  //ReferenceDataService with data_type set to 'INDUSTRY'.
  //e.g. '236110' for Residential Construction.
  string industry = 3 [(validate.rules).string = {ignore_empty: true, max_len: 50}];
  //The roles and duties the customer performs for the employer.
  //This value is optional and has a maximum of 50 characters.
  //The value stored here is one of the code values retrieved from the
  //ReferenceDataService with data_type set to 'OCCUPATION'.
  //e.g. 'OCCUPATION_8255_CONTRACTOR_AND_SUPERVISOR_LANDSCAPING'
  string occupation = 4 [(validate.rules).string = {ignore_empty: true, max_len: 50}];
  //The month and year the customer started this position.
  google.type.Date startDate = 5;
  //The month and year the customer no longer held this position.
  google.type.Date endDate = 6;
  //The Address of the employer.
  //The 'type' field must be set to 'WORK'. Required.
  Address work_address = 7;
  //The phone number of the employer. Required.
  string work_phone_number = 8 [(validate.rules).string = { ignore_empty: true, pattern: '\\+(9[976]\\d|8[987530]\\d|6[987]\\d|5[90]\\d|42\\d|3[875]\\d|2[98654321]\\d|9[8543210]|8[6421]|6[6543210]|5[87654321]|4[987654310]|3[9643210]|2[70]|7|1)\\d{1,14}$' }];
}

//CustomerResidency contains the residency status details of the customer.
message CustomerResidency {
  //The Canadian residency status. This is true if the customer is a Canadian resident, false otherwise.
  bool is_canadian_tax_resident = 1;
  //A collection of other countries where the customer has residence.
  //At least one is required if not a Canadian resident.
  repeated OtherResidence other_residences = 2;
  //A tokenized UUID representation of the customer SIN number.
  string sin_token = 3 [(validate.rules).string = {ignore_empty: true, uuid: true}];
  //The primary or current citizenship of the customer.
  //The format is an ISO 3166 Country alpha-2 code (e.g. US, CA, FR).
  string citizenship = 4;
}

//OtherResidence is a message for providing alternate countries and places of residence.
message OtherResidence {
  //The name of the other country of residence.
  string other_residence_country = 1 [(validate.rules).string = {max_len: 50}];
  //A tokenized UUID representation of the unique TIN for the country
  //of residence. Optional.
  string tin_token = 2 [(validate.rules).string = {ignore_empty: true, uuid: true}];
  //The citizenship status in the country of residence. Required if
  //residence country is US or Canada.
  string citizenship = 3 [(validate.rules).string = {ignore_empty: true,max_len: 50}];
}

//Consent is a message indicating the receipt of a requested customer Consent.
message Consent {
  //The type of Consent received from the customer.  This value is required.
  //The value stored here is one of the code values retrieved from the
  //ReferenceDataService with data_type set to 'CONSENT_TYPE'.
  //e.g. ‘CONSENT_TYPE_TERMS_OF_USE_OF_APP’
  string consent_type = 1 [(validate.rules).string.min_len = 1];
  //The UTC timestamp when Consent was received from the customer.
  google.protobuf.Timestamp consent_timestamp = 2 [(validate.rules).timestamp.required = true];
  //The name and version of the document in URL format that the customer consented to.
  string document_name_and_version = 3 [(validate.rules).string.uri = true];
  //The UTC timestamp when the customer viewed the document.
  google.protobuf.Timestamp view_timestamp = 4 [(validate.rules).timestamp.required = true];
}

//Disclosure is a message indicating customer receipt of a documented Disclosure.
message Disclosure {
  //The type of Disclosure sent to the customer. This value is required.
  //The value stored here is one of the code values retrieved from the
  //ReferenceDataService with data_type set to 'DISCLOSURE_TYPE'.
  //e.g. 'DISCLOSURE_TYPE_DISCLOSURES_DURING_ISSUANCE_OF_PREPAID_CARD'
  string disclosure_type = 1 [(validate.rules).string.min_len = 1];
  //The UTC timestamp when the customer viewed the document.
  google.protobuf.Timestamp timestamp = 2 [(validate.rules).timestamp.required = true];
  //Name and version of the disclosure document in URL format that the customer viewed.
  string document_name_and_version = 3 [(validate.rules).string.uri = true];
}

//PersonalDetails defines a message containing the customer's personal details.
message PersonalDetails {
  //The customer first name. This value is required and has a maximum
  //of 50 characters. Accepted characters: -, ', French accents, 0-9.
  string first_name = 1 [(validate.rules).string = {min_len: 1, max_len: 50}];
  //The customer middle name. This value is optional and has a maximum
  //of 50 characters. Accepted characters: -, ', French accents, 0-9.
  string middle_name = 2 [(validate.rules).string = {ignore_empty: true, max_len: 50}];
  //The customer last name. This value is required and has a maximum
  //of 50 characters. Accepted characters: -, ', French accents, 0-9.
  string last_name = 3 [(validate.rules).string = {min_len: 1, max_len: 50}];
  //The customer's date of birth.
  google.type.Date date_of_birth = 4;
}

//AccountUsageDetails is a message for providing the source of funds and purpose for applying
//for an Account.
message AccountUsageDetails {
  //The intended purpose of the Account. This value is required.
  //The value stored here is one of the code values retrieved from the
  //ReferenceDataService with data_type set to 'ACCOUNT_PURPOSE'.
  //e.g. 'ACCOUNT_PURPOSE_EVERYDAY_TRANSACTIONS' or 'ACCOUNT_PURPOSE_TRAVELLING'
  string account_purpose = 1 [(validate.rules).string.min_len = 1];
  //A collection of the primary sources of funds for the Account.  At least one
  //value is required.
  //The values stored here are a collection of the code values retrieved from the
  //ReferenceDataService with data_type set to 'SOURCE_OF_FUNDS'.
  //e.g. 'PRIMARY_SOURCE_OF_FUNDS_LOANS' or 'PRIMARY_SOURCE_OF_FUNDS_GIFTS'
  repeated string primary_source_of_funds = 2 [(validate.rules).repeated = {min_items: 1, items: {string: {min_len: 1}}}];
}

//ContactDetails is a message for providing the contact details for a customer.
message ContactDetails {
  //The contact phone number. This value is optional and must be in a
  //valid phone number format.
  string phone_number = 1 [(validate.rules).string = { ignore_empty: true, pattern: '\\+(9[976]\\d|8[987530]\\d|6[987]\\d|5[90]\\d|42\\d|3[875]\\d|2[98654321]\\d|9[8543210]|8[6421]|6[6543210]|5[87654321]|4[987654310]|3[9643210]|2[70]|7|1)\\d{1,14}$' }];
  //The contact email address. This value is required and must be in a
  //valid email address format.
  string customer_email = 2 [(validate.rules).string.email = true];
}

//OnboardingApplication is the message containing all of the onboarding details
//collected from a customer required to apply for a product.
message OnboardingApplication {
  //The UUID representing a given application.
  string application_id = 1 [(validate.rules).string.uuid = true];
  //The UUID representing the onboarding customer.
  string customer_id = 2 [(validate.rules).string.uuid = true];
  //The unique identifier of the bundled products being applied for.
  string bundle_id = 3 [(validate.rules).string.min_len = 1];
  //The application status. The value here is one of the following.
  //"UNDEFINED" is reserved for error detection purposes. It should not be used directly.
  //"New Application" describes an Application that has just been created.
  //"Data Collection" describes an Application that has successfully performed an Update call
  //or failed a ValidateSelfieRequest or a ValidateDocumentsRequest.
  //"KYC In Progress" describes an Application that has successfully performed a ValidateSelfieRequest
  //or ValidateDocumentsRequest.
  //"KYC Success" describes an Application that has successfully performed KYC checks as a result of
  //a ValidateApplicationRequest.
  //"KYC Failed" describes an Application that has failed KYC as a result of a ValidateApplicationRequest.
  //"KYC Rejected" describes an Application that has no remaining KYC attempts.
  //"Application Accepted" describes an application that has successfully completed an AcceptApplicationRequest.
  //"Application Processed" describes an application that has been successfully completed.
  //"Application Cancelled" describes an application that has been cancelled by the customer.
  string status = 4 [(validate.rules).string.min_len = 1];
  //The personal details about the customer. See PersonalDetails.
  PersonalDetails customer_personal_details = 5;
  //The contact details about the customer. See ContactDetails.
  ContactDetails customer_contact_details = 6;
  //The Account usage intentions of the customer. See AccountUsageDetails.
  AccountUsageDetails account_details = 7;
  //The employment history for the customer. See Employment.
  repeated Employment customer_employment = 8;
  //The residency status of the customer. See CustomerResidency.
  CustomerResidency customer_residency = 9 [(validate.rules).message.required = true];
  //The collection of consents received from the customer. See Consent.
  repeated Consent consents = 10 [(validate.rules).repeated.min_items = 1];
  //The collection of disclosures received from the customer. See Disclosure.
  repeated Disclosure disclosures = 11;
  //The collection of resident addresses owned/occupied by the customer.
  //See Address.
  repeated Address customer_residence_address = 12;
  //The collection of documents collected to identify the customer in
  //the KYC process.
  repeated DocumentInfo customer_identification_documents = 13;
  //The preferred communication method chosen by the customer.
  //The value stored here is one of the code values retrieved from the
  //ReferenceDataService with data_type set to 'COMMUNICATION_PREFERENCE'.
  //e.g. 'COMMUNICATION_PREFERENCES_MOBILE' or 'COMMUNICATION_PREFERENCES_EMAIL'
  string customer_communication_pref = 14;
}

//DocumentInfo is a message containing the details of an onboarding document
//collected from the customer to prove identity.
message DocumentInfo {
  //The type of document used for identification.
  //The value stored here is one of the code values retrieved from the
  //ReferenceDataService with data_type set to 'DOCUMENT_TYPE'.
  //e.g. 'DOCUMENT_TYPE_CANADIAN_DRIVERS_LICENSE' or 'DOCUMENT_TYPE_CANADIAN_PASSPORT'
  string document_type = 1 [(validate.rules).string.min_len = 1];
  //The country the document was issued for.
  string document_country = 2 [(validate.rules).string.min_len = 1];
  //The cloud storage file nme of the image taken of the front of the
  //document. (required, file size <4MB)
  string front_image_file_name = 3 [(validate.rules).string.min_len = 1];
  //The cloud storage file nme of the image taken of the back of the
  //document. (file size <4MB)
  string back_image_file_name = 4 [(validate.rules).string = {ignore_empty: true, min_len: 1}];
}

//OnboardingOperationResponseDetails are the common response fields for an
//onboarding application create or update message.
message OnboardingOperationResponseDetails {
  //The UUID of the application the response is for.
  string application_id = 1 [(validate.rules).string.uuid = true];
  //The updated application status. The value here is one of the following.
  //"UNDEFINED" is reserved for error detection purposes. It should not be used directly.
  //"New Application" describes an Application that has just been created.
  //"Data Collection" describes an Application that has successfully performed an Update call
  //or failed a ValidateSelfieRequest or a ValidateDocumentsRequest.
  //"KYC In Progress" describes an Application that has successfully performed a ValidateSelfieRequest
  //or ValidateDocumentsRequest.
  //"KYC Success" describes an Application that has successfully performed KYC checks as a result of
  //a ValidateApplicationRequest.
  //"KYC Failed" describes an Application that has failed KYC as a result of a ValidateApplicationRequest.
  //"KYC Rejected" describes an Application that has no remaining KYC attempts.
  //"Application Accepted" describes an application that has successfully completed an AcceptApplicationRequest.
  //"Application Processed" describes an application that has been successfully completed.
  //"Application Cancelled" describes an application that has been cancelled by the customer.
  string onboarding_application_status = 2 [(validate.rules).string.min_len = 1];
  //The success status of the request.
  string request_status = 3 [(validate.rules).string.min_len = 1];
  //The detailed reason for the request status.
  string request_status_reason = 4 [(validate.rules).string.min_len = 1];
  //This is for internal use only. Do not use.
  bool is_retry_operation_restricted = 5;
  //The remaining KYC retries allowed.
  int64 remaining_allowed_retries = 6 [(validate.rules).int64.gte = 0];
}

//InitiateApplicationRequest is used to perform the asynchronous
//operation of starting the onboarding application.
//Performing this operation will generate an asynchronous response
//type of InitiateApplicationResponse on the response topic.
message InitiateApplicationRequest {

  option (thebaasco.types.topic) = "thebaasco.onboarding.initiate-application-command";
  option (thebaasco.types.response_topic) = "thebaasco.onboarding.initiate-application-response";

  //The UUID representing the customer.
  string customer_id = 1 [(validate.rules).string = {ignore_empty: true, uuid: true}];
  //The unique identifier of the bundle being applied for.
  string bundle_id = 2 [(validate.rules).string = {ignore_empty: true, min_len: 1}];
}

//InitiateApplicationResponse is the response message for
//InitiateApplicationRequest.
message InitiateApplicationResponse {
  //The basic details of the onboarding application response.
  //See OnboardingOperationResponseDetails.
  OnboardingOperationResponseDetails basic_details = 1 [(validate.rules).message.required = true];
}

//UpdatePersonalDetailsRequest is used to perform the asynchronous
//operation of updating the customer personal details in the onboarding application.
//Performing this operation will generate an asynchronous response
//type of UpdatePersonalDetailsResponse on the response topic.
message UpdatePersonalDetailsRequest {

  option (thebaasco.types.topic) = "thebaasco.onboarding.update-personal-details-command";
  option (thebaasco.types.response_topic) = "thebaasco.onboarding.update-personal-details-response";

  //The UUID of the onboarding application to update.
  string onboarding_application_id = 1 [(validate.rules).string.uuid = true];
  //The updated personal details.
  PersonalDetails customer_personal_details = 2 [(validate.rules).message.required = true];
}

//UpdatePersonalDetailsResponse is the response message for UpdatePersonalDetailsRequest.
//See UpdatePersonalDetailsRequest for details.
message UpdatePersonalDetailsResponse {
  //The basic details of the onboarding application response.
  //See OnboardingOperationResponseDetails.
  OnboardingOperationResponseDetails basic_details = 1 [(validate.rules).message.required = true];
}

//UpdateContactDetailsRequest is used to perform the asynchronous
//operation of updating the customer contact details in the onboarding application.
//Performing this operation will generate an asynchronous response
//type of UpdateContactDetailsResponse on the response topic.
message UpdateContactDetailsRequest {

  option (thebaasco.types.topic) = "thebaasco.onboarding.update-contact-details-command";
  option (thebaasco.types.response_topic) = "thebaasco.onboarding.update-contact-details-response";

  //The UUID of the onboarding application to update.
  string onboarding_application_id = 1 [(validate.rules).string.uuid = true];
  //The updated contact details.  See ContactDetails.
  ContactDetails customer_contact_details = 2 [(validate.rules).message.required = true];
}

//UpdateContactDetailsResponse is the response message for UpdateContactDetailsRequest.
//See UpdateContactDetailsRequest for details.
message UpdateContactDetailsResponse {
  //The basic details of the onboarding application response.
  //See OnboardingOperationResponseDetails.
  OnboardingOperationResponseDetails basic_details = 1 [(validate.rules).message.required = true];
}

//UpdateAccountDetailsRequest is used to perform the asynchronous
//operation of updating the customer account details in the onboarding application.
//Performing this operation will generate an asynchronous response
//type of UpdateAccountDetailsResponse on the response topic.
message UpdateAccountDetailsRequest {

  option (thebaasco.types.topic) = "thebaasco.onboarding.update-account-details-command";
  option (thebaasco.types.response_topic) = "thebaasco.onboarding.update-account-details-response";

  //The UUID of the onboarding application to update.
  string onboarding_application_id = 1 [(validate.rules).string.uuid = true];
  //The updated account usage details.  See AccountUsageDetails.
  AccountUsageDetails account_details = 2 [(validate.rules).message.required = true];
}

//UpdateAccountDetailsResponse is the response message for UpdateAccountDetailsRequest.
//See UpdateAccountDetailsRequest for details.
message UpdateAccountDetailsResponse {
  //The basic details of the onboarding application response.
  //See OnboardingOperationResponseDetails.
  OnboardingOperationResponseDetails basic_details = 1 [(validate.rules).message.required = true];
}

//UpdateEmploymentRequest is used to perform the asynchronous
//operation of updating the customer employment information in the
//onboarding application. Performing this operation will generate an
//asynchronous response type of UpdateEmploymentResponse on the response topic.
message UpdateEmploymentRequest {

  option (thebaasco.types.topic) = "thebaasco.onboarding.update-employment-command";
  option (thebaasco.types.response_topic) = "thebaasco.onboarding.update-employment-response";

  //The UUID of the onboarding application to update.
  string onboarding_application_id = 1 [(validate.rules).string.uuid = true];
  //The updated employment information.  See Employment.
  Employment employment_info = 2 [(validate.rules).message.required = true];
}

//UpdateEmploymentResponse is the response message for UpdateEmploymentRequest.
//See UpdateEmploymentRequest for details.
message UpdateEmploymentResponse {
  //The basic details of the onboarding application response.
  //See OnboardingOperationResponseDetails.
  OnboardingOperationResponseDetails basic_details = 1 [(validate.rules).message.required = true];
}

//UpdateCustomerResidencyRequest is used to perform the asynchronous
//operation of updating the customer residency status in the onboarding application.
//Performing this operation will generate an asynchronous response
//type of UpdateCustomerResidencyResponse on the response topic.
message UpdateCustomerResidencyRequest {

  option (thebaasco.types.topic) = "thebaasco.onboarding.update-customer-residency-command";
  option (thebaasco.types.response_topic) = "thebaasco.onboarding.update-customer-residency-response";

  //The UUID of the onboarding application to update.
  string onboarding_application_id = 1 [(validate.rules).string.uuid = true];
  //The customer residency status. See CustomerResidency.
  CustomerResidency residency = 2 [(validate.rules).message.required = true];
}

//UpdateCustomerResidencyResponse is the response message for
//UpdateCustomerResidencyRequest. See UpdateCustomerResidencyRequest for details.
message UpdateCustomerResidencyResponse {
  //The basic details of the onboarding application response.
  //See OnboardingOperationResponseDetails.
  OnboardingOperationResponseDetails basic_details = 1 [(validate.rules).message.required = true];
}

//UpdateConsentsRequest is used to perform the asynchronous
//operation of updating the consents received from the customer for the
//onboarding application. Performing this operation will generate an asynchronous
//response type of UpdateConsentsResponse on the response topic.
message UpdateConsentsRequest {

  option (thebaasco.types.topic) = "thebaasco.onboarding.update-consents-command";
  option (thebaasco.types.response_topic) = "thebaasco.onboarding.update-consents-response";

  //The UUID of the onboarding application to update.
  string onboarding_application_id = 1 [(validate.rules).string.uuid = true];
  //The updated collection of consents. See Consent.
  repeated Consent consents = 2 [(validate.rules).repeated.min_items = 1];
}

//UpdateConsentsResponse is the response message for UpdateConsentsRequest.
//See UpdateConsentsRequest for details.
message UpdateConsentsResponse {
  //The basic details of the onboarding application response.
  //See OnboardingOperationResponseDetails.
  OnboardingOperationResponseDetails basic_details = 1 [(validate.rules).message.required = true];
}

//UpdateDisclosuresRequest is used to perform the asynchronous
//operation of updating the disclosures received by the customer in the
//onboarding application. Performing this operation will generate an asynchronous
//response type of UpdateDisclosuresResponse on the response topic.
message UpdateDisclosuresRequest {

  option (thebaasco.types.topic) = "thebaasco.onboarding.update-disclosures-command";
  option (thebaasco.types.response_topic) = "thebaasco.onboarding.update-disclosures-response";

  //The UUID of the onboarding application to update.
  string onboarding_application_id = 1 [(validate.rules).string.uuid = true];
  //The updated collection of disclosures. See Disclosure.
  repeated Disclosure disclosures = 2 [(validate.rules).repeated.min_items = 1];
}

//UpdateDisclosuresResponse is the response message for UpdateDisclosuresRequest.
//See UpdateDisclosuresRequest for details.
message UpdateDisclosuresResponse {
  //The basic details of the onboarding application response.
  //See OnboardingOperationResponseDetails.
  OnboardingOperationResponseDetails basic_details = 1 [(validate.rules).message.required = true];
}

//UpdateAddressesRequest is used to perform the asynchronous
//operation of updating the addresses occupied by the customer in the
//onboarding application. Performing this operation will generate an asynchronous
//response type of UpdateAddressesResponse on the response topic.
message UpdateAddressesRequest {

  option (thebaasco.types.topic) = "thebaasco.onboarding.update-addresses-command";
  option (thebaasco.types.response_topic) = "thebaasco.onboarding.update-addresses-response";

  //The UUID of the onboarding application to update.
  string onboarding_application_id = 1 [(validate.rules).string.uuid = true];
  //The collection of addresses occupied by the customer.  See Address.
  repeated Address addresses = 2 [(validate.rules).repeated.min_items = 1];
}

//UpdateAddressesResponse is the response message for UpdateAddressesRequest.
//See UpdateAddressesRequest for details.
message UpdateAddressesResponse {
  //The basic details of the onboarding application response.
  //See OnboardingOperationResponseDetails.
  OnboardingOperationResponseDetails basic_details = 1 [(validate.rules).message.required = true];
}

//UpdateCommunicationPreferencesRequest is used to perform the asynchronous
//operation of updating the communication preferences of the customer in the
//onboarding application. Performing this operation will generate an asynchronous
//response type of UpdateCommunicationPreferencesResponse on the response topic.
message UpdateCommunicationPreferencesRequest {

  option (thebaasco.types.topic) = "thebaasco.onboarding.update-communication-preferences-command";
  option (thebaasco.types.response_topic) = "thebaasco.onboarding.update-communication-preferences-response";

  //The UUID of the onboarding application to update.
  string onboarding_application_id = 1 [(validate.rules).string.uuid = true];
  //The customer communication preference. See OnboardingApplication.
  string customer_communication_pref = 2 [(validate.rules).string.min_len = 1];
}

//UpdateCommunicationPreferencesResponse is the response message for
//UpdateCommunicationPreferencesRequest.
//See UpdateCommunicationPreferencesRequest for details.
message UpdateCommunicationPreferencesResponse {
  //The basic details of the onboarding application response.
  //See OnboardingOperationResponseDetails.
  OnboardingOperationResponseDetails basic_details = 1 [(validate.rules).message.required = true];
}

//ValidateDocumentsRequest is used to perform the asynchronous
//operation of validating the identification documents received from the
//customer in the onboarding application. Performing this operation will
//generate an asynchronous response type of ValidateDocumentsResponse on the
//response topic.
message ValidateDocumentsRequest {

  option (thebaasco.types.topic) = "thebaasco.onboarding.validate-documents-command";
  option (thebaasco.types.response_topic) = "thebaasco.onboarding.validate-documents-response";

  //The UUID of the onboarding application to validate.
  string onboarding_application_id = 1 [(validate.rules).string.uuid = true];
  //The collection of documents to validate. See DocumentInfo.
  repeated DocumentInfo document_details = 2 [(validate.rules).repeated.min_items = 1];
}

//ValidateSelfieRequest is used to perform the asynchronous
//operation of validating the selfie pictures received from the
//customer in the onboarding application. Performing this operation will
//generate an asynchronous response type of ValidateSelfieResponse on the
//response topic.
message ValidateSelfieRequest{

  option (thebaasco.types.topic) = "thebaasco.onboarding.validate-selfie-command";
  option (thebaasco.types.response_topic) = "thebaasco.onboarding.validate-selfie-response";

  //The UUID of the onboarding application to validate.
  string onboarding_application_id = 1 [(validate.rules).string.uuid = true];
  //The name of the selfie file to validate. See OnboardingApplication.
  string file_name = 2 [(validate.rules).string.min_len = 1];
}

//ValidateApplicationRequest is used to perform the asynchronous
//operation of validating the entire onboarding application and all documents
//received from the customer. Performing this operation will generate an
//asynchronous response type of ValidateApplicationResponse on the response topic.
message ValidateApplicationRequest{

  option (thebaasco.types.topic) = "thebaasco.onboarding.validate-application-command";
  option (thebaasco.types.response_topic) = "thebaasco.onboarding.validate-application-response";

  //The UUID of the onboarding application to validate.
  string onboarding_application_id = 1 [(validate.rules).string.uuid = true];
}

//ValidateDocumentsResponse is the response message for ValidateDocumentsRequest.
//See ValidateDocumentsRequest for details.
message ValidateDocumentsResponse {
  //The basic details of the onboarding application response.
  //See OnboardingOperationResponseDetails.
  OnboardingOperationResponseDetails basic_details = 1 [(validate.rules).message.required = true];
}

//ValidateSelfieResponse is the response message for ValidateSelfieRequest.
//See ValidateSelfieRequest for details.
message ValidateSelfieResponse {
  //The basic details of the onboarding application response.
  //See OnboardingOperationResponseDetails.
  OnboardingOperationResponseDetails basic_details = 1 [(validate.rules).message.required = true];
}

//ValidateApplicationResponse is the response message for
//ValidateApplicationRequest. See ValidateApplicationRequest for details.
message ValidateApplicationResponse {
  //The basic details of the onboarding application response.
  //See OnboardingOperationResponseDetails.
  OnboardingOperationResponseDetails basic_details = 1 [(validate.rules).message.required = true];
}

//AcceptApplicationRequest is used to perform the asynchronous
//operation of accepting the onboarding application received from the
//customer. Performing this operation will generate an asynchronous
//response type of AcceptApplicationResponse on the response topic.
message AcceptApplicationRequest{

  option (thebaasco.types.topic) = "thebaasco.onboarding.accept-application-command";
  option (thebaasco.types.response_topic) = "thebaasco.onboarding.accept-application-response";

  //The UUID of the onboarding application to accept.
  string onboarding_application_id = 1 [(validate.rules).string.uuid = true];
}

//AcceptApplicationResponse is the response message for AcceptApplicationRequest.
//See AcceptApplicationRequest for details.
message AcceptApplicationResponse {
  //The basic details of the onboarding application response.
  //See OnboardingOperationResponseDetails.
  OnboardingOperationResponseDetails basic_details = 1 [(validate.rules).message.required = true];
}

//FinalizeApplicationCreateCustomerRequest is used to perform the asynchronous
//operation of creating the customer for the onboarding application. Performing
//this operation will generate an asynchronous response type of
//FinalizeApplicationCreateCustomerResponse on the response topic.
message FinalizeApplicationCreateCustomerRequest{

  option (thebaasco.types.topic) = "thebaasco.onboarding.create-customer-command";
  option (thebaasco.types.response_topic) = "thebaasco.onboarding.create-customer-response";

  //The UUID of the onboarding application to create a customer for.
  string onboarding_application_id = 1 [(validate.rules).string.uuid = true];
}

//FinalizeApplicationCreateCustomerResponse is the response message for
//FinalizeApplicationCreateCustomerRequest.
//See FinalizeApplicationCreateCustomerRequest for details.
message FinalizeApplicationCreateCustomerResponse {
  //The basic details of the onboarding application response.
  //See OnboardingOperationResponseDetails.
  OnboardingOperationResponseDetails basic_details = 1 [(validate.rules).message.required = true];
  //The UUID representing the newly created customer.
  string customer_id = 2 [(validate.rules).string.uuid = true];
}

//FinalizeApplicationCreateProductRequest is used to perform the asynchronous
//operation of creating the product for the onboarding application. Performing
//this operation will generate an asynchronous response type of
//FinalizeApplicationCreateProductResponse on the response topic.
message FinalizeApplicationCreateProductRequest{

  option (thebaasco.types.topic) = "thebaasco.onboarding.create-product-command";
  option (thebaasco.types.response_topic) = "thebaasco.onboarding.create-product-response";

  //The UUID of the onboarding application to create the product for.
  string onboarding_application_id = 1 [(validate.rules).string.uuid = true];
}

//FinalizeApplicationCreateProductResponse is the response message for
//FinalizeApplicationCreateProductRequest.
//See FinalizeApplicationCreateProductRequest for details.
message FinalizeApplicationCreateProductResponse {
  //The basic details of the onboarding application response.
  //See OnboardingOperationResponseDetails.
  OnboardingOperationResponseDetails basic_details = 1 [(validate.rules).message.required = true];
  //The collection of products created. See OnboardedProduct.
  repeated OnboardedProduct products = 2 [(validate.rules).repeated.min_items = 1];
}

//GetApplicationStatusRequest is used to retrieve the current status of
//the onboarding application.
message GetApplicationStatusRequest {
  //The UUID of the onboarding application to get the status of.
  string application_id = 1 [(validate.rules).string.uuid = true];
}

//GetApplicationStatusResponse is the response message for
//GetApplicationStatusRequest. See GetApplicationStatusRequest for details.
message GetApplicationStatusResponse {
  //The basic details of the onboarding application response.
  //See OnboardingOperationResponseDetails.
  OnboardingOperationResponseDetails basic_details = 1 [(validate.rules).message.required = true];
}

//OnboardingApplicationCustomerOnboardedEvent is an event raised when a
//customer is created.
message OnboardingApplicationCustomerOnboardedEvent {
  option (thebaasco.types.topic) = "thebaasco.onboarding.application-customer-onboarded";

  //The unique ID of this event. Can be used by consumers to determine if
  //an event has already been processed or not. This ID will always be a valid UUID.
  string event_id = 1 [(validate.rules).string.min_len = 1];
  //The UUID of the onboarding application connected to this event.
  string application_id = 2 [(validate.rules).string.uuid = true];
  //The ID to identify the tenant on which the operation occurred. This can be used
  //when processing events at the global scope to differentiate between tenants.
  int32 tenant_id = 4 [(validate.rules).int32 = {gte: 1, lte: 9999}];
  //The UTC timestamp when this event was issued.
  google.protobuf.Timestamp event_time = 5 [(validate.rules).timestamp.required = true];
}

//OnboardedProduct is the message representing a single product in the
//onboarding application.
message OnboardedProduct {
  //The UUID of the onboarded product.
  string product_id = 2 [(validate.rules).string.uuid = true];
  //The source domain of the onboarded product (eg: core-banking).
  string source_domain = 3 [(validate.rules).string.min_len = 1];
}

//OnboardingApplicationProductOnboardedEvent is the async event message sent
//when a product is created with the FinalizeApplicationCreateProductRequest.
message OnboardingApplicationProductOnboardedEvent {
  option (thebaasco.types.topic) = "thebaasco.onboarding.application-product-onboarded";

  //The unique ID of this event. Can be used by consumers to determine if
  //an event has already been processed or not. This ID will always be a valid UUID.
  string event_id = 1 [(validate.rules).string.min_len = 1];
  //The UUID of the onboarding application connected to this event.
  string application_id = 2 [(validate.rules).string.uuid = true];
  //The collection of products onboarded. See OnboardedProduct.
  repeated OnboardedProduct products = 3 [(validate.rules).repeated.min_items = 1];
  //The ID to identify the tenant on which the operation occurred. This can be used
  //when processing events at the global scope to differentiate between tenants.
  int32 tenant_id = 4 [(validate.rules).int32 = {gte: 1, lte: 9999}];
  //The UTC timestamp when this event was issued.
  google.protobuf.Timestamp event_time = 5 [(validate.rules).timestamp.required = true];
}

//OnboardingApplicationDataConfirmedEvent is the async event message sent when
//a new customer is onboarded. As part of PB-3330, this event will also occur
//when onboarding a new product for an existing customer.
message OnboardingApplicationDataConfirmedEvent {
  option (thebaasco.types.topic) = "thebaasco.onboarding.application-data-confirmed";

  //The unique ID of this event. Can be used by consumers to determine if
  //an event has already been processed or not. This ID will always be a valid UUID.
  string event_id = 1 [(validate.rules).string.min_len = 1];
  //The complete onboarding application for the onboarded customer.
  //See OnboardingApplication.
  OnboardingApplication application = 2 [(validate.rules).message.required = true];
  //The ID to identify the tenant on which the operation occurred. This can be used
  //when processing events at the global scope to differentiate between tenants.
  int32 tenant_id = 3[(validate.rules).int32 = {gte: 1, lte: 9999}];
  //The UTC timestamp when this event was issued.
  google.protobuf.Timestamp event_time = 4 [(validate.rules).timestamp.required = true];
}

//Onboarding provides a way to upload documents and check the status of an
//onboarding application.
service Onboarding {
  //GetApplicationStatus gets the current status of a given onboarding application.
  //It provides a way to handle non-authenticated users' interrupted sessions.
  //See GetApplicationStatusRequest for details.
  rpc GetApplicationStatus(GetApplicationStatusRequest) returns (GetApplicationStatusResponse) {
  }

  //CreateFileUploadUrl is used as an initial step for the upload of a customer KYC document.
  //1. The UI will call this operation to generate upload-ready url for each file needed.
  //2. The UI will perform the upload of each file.
  //3. The UI will call UploadValidateDocument including file_name of each document
  //   along with its corresponding meta-data
  //The filename will be used to match the document's meta-data with the uploaded
  //content in step 2
  rpc CreateFileUploadURL(CreateFileUploadUrlRequest) returns (CreateFileUploadUrlResponse) {
  }
}

//CreateFileUploadUrlRequest is the parameter to pass when calling CreateFileUploadURL.
message CreateFileUploadUrlRequest {
  //The UUID representing the onboarding application that requested a file upload URL.
  string onboarding_application_id = 1 [(validate.rules).string.uuid = true];
}

//CreateFileUploadUrlResponse is the response returned by the CreateFileUploadURL
message CreateFileUploadUrlResponse {

  //The generated name for the file to upload.
  string filename = 1 [(validate.rules).string.min_len = 1];
  //The URL to use to upload the file.
  string upload_url = 2 [(validate.rules).string.uri = true];
}
