syntax = "proto3";
package thebaasco.tenant.clientprofile.v1;

import "google/protobuf/timestamp.proto";
import "google/type/date.proto";
import "validate/validate.proto";
import "types/options.proto";

option go_package = "proto/tenant/clientprofile/v1";

message CreateIndividualPartyRequest {
  option (thebaasco.types.topic) = "thebaasco.client-profile.create-individual-party-command";
  option (thebaasco.types.response_topic) = "thebaasco.client-profile.create-individual-party-response";

  IndividualParty individual_party = 1[(validate.rules).message.required = true];
}

message CreateIndividualPartyResponse {
  IndividualParty individual_party = 1[(validate.rules).message.required = true];
}

message IndividualPartyCreatedEvent {
  option (thebaasco.types.topic) = "thebaasco.client-profile.individual-party-created-event";

  string event_id = 1[(validate.rules).string.uuid = true];
  IndividualParty individual_party = 2[(validate.rules).message.required = true];
  int32 tenant_id = 3[(validate.rules).int32 = {gte: 1, lte: 9999}];
  google.protobuf.Timestamp individual_party_created_time = 4[(validate.rules).timestamp.required = true];
}

message IndividualParty {
  //This structure must be filled with data from onboarding, previous version was draft.
  // Please update

  string first_name = 1; // [(validate.rules).string = {ignore_empty: true,max_len: 50}]; //required maxlen=50 AN characters, hyphen (-), apostrophe, ('), French accents, numbers (0-9)
  string middle_name = 2; // [(validate.rules).string = {ignore_empty: true,max_len: 50}]; // not required maxlen=50 AN characters, hyphen (-), apostrophe, ('), French accents, numbers (0-9)
  string last_name = 3; // [(validate.rules).string = {ignore_empty: true,max_len: 50}]; //required maxlen=50 AN characters, hyphen (-), apostrophe, ('), French accents, numbers (0-9)
  google.type.Date date_of_birth = 4;
  ContactDetails customer_contact_details = 5;
  repeated Employment customer_employment = 6; // proto only - implementation hardcoded to one for MVP
  CustomerResidency customer_residency = 7; // Required
  repeated Address customer_residence_address = 8;

  //Output only
  string individual_party_id = 9[(validate.rules).string.uuid = true];
}

message Address{
  string type = 1; // Required, HOME or WORK. Will be validated based on reference data values
  string organization = 2; // [(validate.rules).string = {ignore_empty: true, max_len: 300}]; //NR max-len=300)
  string line_one = 3; // [(validate.rules).string = {ignore_empty: true,max_len: 300}];//Required max-len=300)
  string line_two = 4; // [(validate.rules).string = {ignore_empty: true,max_len: 300}] ;//NR max-len=300)
  string line_three = 5; // [(validate.rules).string = {ignore_empty: true,max_len: 300}];//NR max-len=300)
  string line_four = 6; // [(validate.rules).string = {ignore_empty: true,max_len: 300}];//NR max-len=300)
  string line_five = 7; // [(validate.rules).string = {ignore_empty: true,max_len: 300}];//NR max-len=300)
  string line_six = 8; // [(validate.rules).string = {ignore_empty: true,max_len: 300}];//NR max-len=300)
  string line_seven = 9; // [(validate.rules).string = {ignore_empty: true,max_len: 300}];//NR max-len=300)
  string line_eight = 10; // [(validate.rules).string = {ignore_empty: true,max_len: 300}];//NR max-len=300)
  string locality = 11; // [(validate.rules).string = {ignore_empty: true,max_len: 150}]; //NR max-len=150 (City)
  string dependent_locality = 12; // [(validate.rules).string = {ignore_empty: true,max_len: 150}]; //NR max-len=150
  string double_dependent_locality = 13; // [(validate.rules).string = {ignore_empty: true,max_len: 150}]; //NR max-len=150
  string administrative_area = 14; //[(validate.rules).string = {ignore_empty: true,max_len: 150}]; //NR max-len=150
  string sub_administrative_area =15; // [(validate.rules).string = {ignore_empty: true,max_len: 150}]; //NR max-len=150
  string area = 16; //[(validate.rules).string = {ignore_empty: true,max_len: 150}]; //Required max-len=150 ---- (State, municipality)
  string postal_code = 17; // [(validate.rules).string = {ignore_empty: true,max_len: 150}];  //Required max-len=150
  string country = 18; // [(validate.rules).string = {ignore_empty: true,max_len: 50}]; // req
}


message Employment{
  string employment_status = 1; // required: " Values defined here –    https://thebaasco.atlassian.net/browse/PB-645"
  string employer_name = 2; // [(validate.rules).string = {ignore_empty: true,max_len: 50}]; // Required for 0-2 status , length 50, sql injection validation/policies
  string industry = 3; // [(validate.rules).string = {ignore_empty: true,max_len: 50}];  // Required for 0-2 status
  string occupation = 4; // [(validate.rules).string = {ignore_empty: true,max_len: 50}];
  google.type.Date start_date = 5; // not required, format Month/year
  google.type.Date end_date = 6; // not required, format Month/year
  Address work_address = 7; //Required for 0-2 status
  string work_phone_number = 8; //   [(validate.rules).string = { ignore_empty: true,pattern: '\\+(9[976]\\d|8[987530]\\d|6[987]\\d|5[90]\\d|42\\d|3[875]\\d|2[98654321]\\d|9[8543210]|8[6421]|6[6543210]|5[87654321]|4[987654310]|3[9643210]|2[70]|7|1)\\d{1,14}$' }]; //Required for 0-2
}

message CustomerResidency {
  bool is_canadian_tax_resident = 1; // Are you resident of Canada?
  repeated OtherResidence other_residences = 2; //US PB-705
  string sin_token = 3[(validate.rules).string.uuid = true]; // [(validate.rules).string = { min_len: 9, max_len:9, pattern:"^\\d*$"}]; // NR, ?How to deal with # patterns dependent on country
  string citizenship = 4; // US PB-703 - select
}

message OtherResidence{
  string country = 1;
  string tin_token = 2[(validate.rules).string.uuid = true]; // [(validate.rules).string = {ignore_empty: true,max_len: 50}]; // max length 50
  string citizenship = 3; // [(validate.rules).string = {ignore_empty: true,max_len: 50}]; // Required if us or canada
}

message ContactDetails {
  string phone_number = 1; // [(validate.rules).string = { ignore_empty: true,pattern: '\\+(9[976]\\d|8[987530]\\d|6[987]\\d|5[90]\\d|42\\d|3[875]\\d|2[98654321]\\d|9[8543210]|8[6421]|6[6543210]|5[87654321]|4[987654310]|3[9643210]|2[70]|7|1)\\d{1,14}$' }]; //Required, regex
  string customer_email = 2; // required, should reject if Email' field does not contain '@', '.com', '.biz’, '.ca' or any other type of standard email format
}